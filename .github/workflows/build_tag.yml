name: Builder Tag CI (WIN)
permissions:
  contents: write
  id-token: write
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REF: ${{ github.ref }}
    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v4
    - name: Installing Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
    - uses: actions/cache@v4
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        # enableCrossOsArchive: true
        # fail-on-cache-miss: true
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Prepare for Windows Build
      shell: powershell #The default shell for Windows
      run: |
        yarn install --network-timeout 100000 --retry 5 --network-concurrency 1 --verbose
    - name: Build for Windows
      shell: powershell #The default shell for Windows
      run: |
        yarn run build
    - name: Get current tag
      id: get_tag
      shell: bash
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    - name: Upload Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG }}
        name: Release ${{ env.TAG }}
        body: "More new features are now supported."
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        generate_release_notes: true
        files: |
          dist/mango-launcher.exe
    # - name: Get current tag
    #   id: get_tag
    #   shell: bash
    #   run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    # - name: Set executable permissions for shell files
    #   run: |
    #     chmod +x ./upload.sh
    # - name: Upload Windows Build
    #   shell: bash
    #   run: |
    #     ./upload.sh $TAG
